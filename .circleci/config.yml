version: 2.1

parameters:
  namespace:
    type: string
    default: im-sandbox
  deploy:
    type: boolean
    default: false

orbs:
  aws-cli: circleci/aws-cli@4.1.2
  helm: circleci/helm@3.0.0

jobs:
  build-docker-images:
    docker:
      - image: cimg/aws:2023.09
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - aws-cli/setup:
          role_arn: "${AWS_CIRCLECI_ROLE_ARN}"
          region: ${AWS_REGION}
          role_session_name: CircleCISession
          session_duration: '1800'
      - run:
          name: Create X-Road container images
          command: |
            aws ecr get-login-password | docker login --username AWS --password-stdin "${CONTAINER_REGISTRY}"
            ./x-road/images/docker-build.sh -p -t latest -r "${CONTAINER_REGISTRY}"

  deploy-information-mediator:
    docker:
      - image: cimg/aws:2023.09
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: "${AWS_CIRCLECI_ROLE_ARN}"
          region: ${AWS_REGION}
          role_session_name: CircleCISession
          session_duration: '1800'
      - run:
        name: Update kubeconfig
        command: |
          aws eks update-kubeconfig --name ${EKS_CLUSTER}
      - run:
          name: Deploy Information Mediator
          command: |
            helm upgrade --install --atomic \
                --wait --timeout 15m \
                --create-namespace \
                --namespace "<< pipeline.parameters.namespace >>" \
                --set-string xroad-ss.tokenPin="$IM_XROAD_TOKEN_PIN" \
                --set-string xroad-cs.tokenPin="$IM_XROAD_TOKEN_PIN" \
                --set-string global.registry="${CONTAINER_REGISTRY}" \
                sandbox-im-xroad ./x-road/sandbox-im-x-road
      - run:
          name: Verify that X-Road is ready
          command: |
            kubectl -n "<< pipeline.parameters.namespace>>" wait pod --for=condition=Ready --all --timeout 15m

workflows:
  "Deploy IM to EKS cluster":
    jobs:
      - build-docker-images:
          context: playground
      - approve-deploy:
          type: approval
          requires:
            - build-docker-images
      - deploy-information-mediator:
          context: playground
          requires:
            - approve-deploy        
