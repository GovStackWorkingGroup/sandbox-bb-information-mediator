version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1
  aws-ecr: circleci/aws-ecr@8.2.1
  aws-eks: circleci/aws-eks@2.1.2
  helm: circleci/helm@1.0
  kubernetes: circleci/kubernetes@1.3.1
jobs:
  deploy-information-mediator:
    docker:
      - image: cimg/aws:2022.06
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - helm/install-helm-client:
          version: v3.2.0
      - aws-cli/setup:
          role-arn: 'arn:aws:iam::463471358064:role/CircleCIRole'
          aws-region: AWS_DEFAULT_REGION
          profile-name: CircleCIRole
          role-session-name: CircleSession
          session-duration: '1800' 
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "${AWS_CLUSTER_NAME}"
          cluster-authentication-role-arn: arn:aws:iam::463471358064:role/CircleCIRole
      - run:
          name: Debug
          command: aws sts get-caller-identity
      - run:
          name: Update kubectl
          command: |
            aws eks update-kubeconfig --region "${AWS_DEFAULT_REGION}" --name "${AWS_CLUSTER_NAME}" --role-arn arn:aws:iam::463471358064:role/CircleCIRole
      - run:
          name: Install secrets for Information Mediator
          command: |
            export NAMESPACE="${AWS_NAMESPACE}"
            cp ./information-mediator/values-secrets.yaml val.yaml
            sed -i 's/${NAMESPACE}/'"$NAMESPACE"'/g' val.yaml
            helm install information-mediator ./information-mediator/ -f val.yaml
      - run:
          name: Install postgres for Information Mediator
          command: |
            export NAMESPACE="${AWS_NAMESPACE}"
            cp ./information-mediator/values-postgres.yaml val.yaml
            sed -i 's/${NAMESPACE}/'"$NAMESPACE"'/g' val.yaml
            export XROAD-CS-POSTGRES-ADMIN-SECRET=$(kubectl get secret govstack-xroad-cs-postgres-admin-secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export XROAD-SSC-POSTGRES-ADMIN-SECRET=$(kubectl get secret govstack-xroad-ssc-postgres-admin-secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export XROAD-SSM-POSTGRES-ADMIN-SECRET=$(kubectl get secret govstack-xroad-ssm-postgres-admin-secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export XROAD-SSP-POSTGRES-ADMIN-SECRET=$(kubectl get secret govstack-xroad-ssp-postgres-admin-secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            helm upgrade --install information-mediator ./information-mediator/ -f val.yaml
      - run:
          name: Install X-Road components for Information Mediator
          command: |
            export NAMESPACE="${AWS_NAMESPACE}"
            cp ./information-mediator/values.yaml val.yaml
            sed -i 's/${NAMESPACE}/'"$NAMESPACE"'/g' val.yaml
            db_name="govstack-xroad-cs-postgres"
            config_name="govstack-xroad-cs-postgres-config"
            admin_secret="govstack-xroad-cs-postgres-admin-secret"
            centerui_secret="govstack-xroad-cs-postgres-centerui-secret"
            export NAMESPACE=${AWS_NAMESPACE}
            export ECR_CS_REPO_NAME=${AWS_ECR_CS_REPO}
            export ECR_SS_REPO_NAME=${AWS_ECR_SS_REPO}
            export CS_DB_HOST=$(kubectl get service $db_name -o jsonpath='{.spec.clusterIP}' -n $NAMESPACE)
            export CS_DB_PORT=$(kubectl get service $db_name -o jsonpath='{.spec.ports[0].port}' -n $NAMESPACE)            
            export CS_DB_ADMIN_USER=$(kubectl get configmap $config_name -o jsonpath='{.data.POSTGRES_USER}' -n $NAMESPACE)
            export CS_DB_ADMIN_PASS=$(kubectl get secret $admin_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export CS_DB_UI_PASS=$(kubectl get secret $centerui_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)

            db_name="govstack-xroad-ssc-postgres"
            config_name="govstack-xroad-ssc-postgres-config"
            admin_secret="govstack-xroad-ssc-postgres-admin-secret"
            serverconf_admin_secret="govstack-xroad-ssc-postgres-serverconf-admin-secret"
            messagelog_admin_secret="govstack-xroad-ssc-postgres-messagelog-admin-secret"
            serverconf_secret="govstack-xroad-ssc-postgres-serverconf-secret"
            messagelog_secret="govstack-xroad-ssc-postgres-messagelog-secret"               
            export SSC_DB_HOST=$(kubectl get service $db_name -o jsonpath='{.spec.clusterIP}' -n $NAMESPACE)
            export SSC_DB_PORT=$(kubectl get service $db_name -o jsonpath='{.spec.ports[0].port}' -n $NAMESPACE)            
            export SSC_DB_ADMIN_USER=$(kubectl get configmap $config_name -o jsonpath='{.data.POSTGRES_USER}' -n $NAMESPACE)
            export SSC_DB_ADMIN_PASS=$(kubectl get secret $admin_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export SSC_DB_SERVERCONF_ADMIN_PASS=$(kubectl get secret $serverconf_admin_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export SSC_DB_MESSAGELOG_ADMIN_PASS=$(kubectl get secret $messagelog_admin_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export SSC_DB_SERVERCONF_PASS=$(kubectl get secret $serverconf_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export SSC_DB_MESSAGELOG_PASS=$(kubectl get secret $messagelog_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            
            db_name="govstack-xroad-ssm-postgres"
            config_name="govstack-xroad-ssm-postgres-config"
            admin_secret="govstack-xroad-ssm-postgres-admin-secret"
            serverconf_admin_secret="govstack-xroad-ssm-postgres-serverconf-admin-secret"
            messagelog_admin_secret="govstack-xroad-ssm-postgres-messagelog-admin-secret"
            serverconf_secret="govstack-xroad-ssm-postgres-serverconf-secret"
            messagelog_secret="govstack-xroad-ssm-postgres-messagelog-secret"               
            export SSM_DB_HOST=$(kubectl get service $db_name -o jsonpath='{.spec.clusterIP}' -n $NAMESPACE)
            export SSM_DB_PORT=$(kubectl get service $db_name -o jsonpath='{.spec.ports[0].port}' -n $NAMESPACE)            
            export SSM_DB_ADMIN_USER=$(kubectl get configmap $config_name -o jsonpath='{.data.POSTGRES_USER}' -n $NAMESPACE)
            export SSM_DB_ADMIN_PASS=$(kubectl get secret $admin_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export SSM_DB_SERVERCONF_ADMIN_PASS=$(kubectl get secret $serverconf_admin_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export SSM_DB_MESSAGELOG_ADMIN_PASS=$(kubectl get secret $messagelog_admin_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export SSM_DB_SERVERCONF_PASS=$(kubectl get secret $serverconf_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export SSM_DB_MESSAGELOG_PASS=$(kubectl get secret $messagelog_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
         
            db_name="govstack-xroad-ssp-postgres"
            config_name="govstack-xroad-ssp-postgres-config"
            admin_secret="govstack-xroad-ssp-postgres-admin-secret"
            serverconf_admin_secret="govstack-xroad-ssp-postgres-serverconf-admin-secret"
            messagelog_admin_secret="govstack-xroad-ssp-postgres-messagelog-admin-secret"
            serverconf_secret="govstack-xroad-ssp-postgres-serverconf-secret"
            messagelog_secret="govstack-xroad-ssp-postgres-messagelog-secret"               
            export SSP_DB_HOST=$(kubectl get service $db_name -o jsonpath='{.spec.clusterIP}' -n $NAMESPACE)
            export SSP_DB_PORT=$(kubectl get service $db_name -o jsonpath='{.spec.ports[0].port}' -n $NAMESPACE)            
            export SSP_DB_ADMIN_USER=$(kubectl get configmap $config_name -o jsonpath='{.data.POSTGRES_USER}' -n $NAMESPACE)
            export SSP_DB_ADMIN_PASS=$(kubectl get secret $admin_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export SSP_DB_SERVERCONF_ADMIN_PASS=$(kubectl get secret $serverconf_admin_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export SSP_DB_MESSAGELOG_ADMIN_PASS=$(kubectl get secret $messagelog_admin_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export SSP_DB_SERVERCONF_PASS=$(kubectl get secret $serverconf_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export SSP_DB_MESSAGELOG_PASS=$(kubectl get secret $messagelog_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)        
 
            helm upgrade --install information-mediator ./information-mediator/ -f val.yaml                   
workflows:
  Deploy IM to EKS cluster:
    jobs:
      - hold:
          type: approval
      - deploy-information-mediator:
          context: aws
          requires: 
            - hold
