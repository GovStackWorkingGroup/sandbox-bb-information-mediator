{{ if .Values.global.postgres }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-initdb-config
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS customers (
                                             customer_id bpchar NOT NULL,
                                             company_name character varying(40) NOT NULL,
                                             contact_name character varying(30),
                                             contact_title character varying(30),
                                             address character varying(60),
                                             city character varying(15),
                                             region character varying(15),
                                             postal_code character varying(10),
                                             country character varying(15),
                                             phone character varying(24),
                                             fax character varying(24)
    );
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres.deployment.name }}
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.postgres.deployment.spec.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.postgres.deployment.spec.selector.matchLabels.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.deployment.spec.temp.metadata.labels.app }}
    spec:
      containers:
        - name: {{ .Values.postgres.deployment.spec.temp.spec.containers.name }}
          image: {{ .Values.postgres.deployment.spec.temp.spec.containers.image }}
          imagePullPolicy: {{ .Values.postgres.deployment.spec.temp.spec.containers.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.postgres.deployment.spec.temp.spec.containers.containerPort }}
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.deployment.spec.temp.spec.containers.passwordSecretName }}
                  key: password
          volumeMounts:
            - mountPath: {{ .Values.global.PGDATA }}
              name: {{ .Values.postgres.deployment.spec.temp.spec.containers.volumeMountName }}
      volumes:
        {{- range .Values.postgres.deployment.spec.temp.spec.volumes }}
        - name: {{ .name }}
          persistentVolumeClaim:
            claimName: {{ .claimName }}
        - name: postgresql-initdb
          configMap:
            name: postgresql-initdb-config
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.postgres.service.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.postgres.service.labels.app }}
spec:
  type: {{ .Values.postgres.service.spec.type }}
  ports:
    - port: {{ .Values.postgres.service.spec.port }}
  selector:
    app: {{ .Values.postgres.service.spec.selector.app }}
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: {{ .Values.postgres.storage.volName }}
  namespace: {{ .Values.global.namespace }}
  labels:
    type: {{ .Values.postgres.storage.labels.type }}
    app: {{ .Values.postgres.storage.labels.app }}
spec:
  storageClassName: {{ .Values.postgres.storage.spec.storageClassName }}
  persistentVolumeReclaimPolicy: {{ .Values.postgres.storage.spec.persistentVolumeReclaimPolicy }}
  capacity:
    storage: {{ .Values.postgres.storage.spec.capacity.storage }}
  accessModes:
    - {{ .Values.postgres.storage.spec.accessMode }}
  hostPath:
    path: {{ .Values.postgres.storage.spec.hostPath.path }}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .Values.postgres.storage.claimName }}
  namespace: {{ .Values.global.namespace }}
spec:
  storageClassName: {{ .Values.postgres.storage.spec.storageClassName }}
  accessModes:
    - {{ .Values.postgres.storage.spec.accessMode }}
  resources:
    requests:
      storage: {{ .Values.postgres.storage.spec.capacity.storage }}
  selector:
    matchLabels:
      app: {{ .Values.postgres.storage.labels.app }}
{{ end }}