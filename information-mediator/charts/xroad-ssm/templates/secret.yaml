{{ if .Values.global.secret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secret.postgres.adminDbInfo.name }}
  namespace: {{ .Values.global.namespace }}
  annotations:
    "helm.sh/resource-policy": "keep"  
type: {{ .Values.secret.postgres.adminDbInfo.type }}
data:
  dbname: postgres
  username: postgres
#  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace ".Values.secret.postgres.adminDbInfo.name") | default dict }}
#  {{- $secretData := (get $secretObj "data") | default dict }}
#  {{- $dbname := (get $secretData ".Values.secret.postgres.adminDbInfo.name") | default (randAlphaNum 32 | b64enc) }}
#  {{- $username := (get $secretData ".Values.secret.postgres.adminDbInfo.name") | default (randAlphaNum 32 | b64enc) }}
#  dbname: {{ $dbname | quote }}
#  username: {{ $username | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secret.postgres.adminPassword.name }}
  namespace: {{ .Values.global.namespace }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: {{ .Values.secret.postgres.adminPassword.type }}
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace ".Values.secret.postgres.adminPassword.name") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $password := (get $secretData ".Values.secret.postgres.adminPassword.name") | default (randAlphaNum 32 | b64enc) }}
  password: {{ $password | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secret.postgres.serverConfAdminPassword.name }}
  namespace: {{ .Values.global.namespace }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: {{ .Values.secret.postgres.serverConfAdminPassword.type }}
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace ".Values.secret.postgres.serverConfAdminPassword.name") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $password := (get $secretData ".Values.secret.postgres.serverConfAdminPassword.name") | default (randAlphaNum 32 | b64enc) }}
  password: {{ $password | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secret.postgres.serverConfPassword.name }}
  namespace: {{ .Values.global.namespace }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: {{ .Values.secret.postgres.serverConfPassword.type }}
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace ".Values.secret.postgres.serverConfPassword.name") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $password := (get $secretData ".Values.secret.postgres.serverConfPassword.name") | default (randAlphaNum 32 | b64enc) }}
  password: {{ $password | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secret.postgres.messageLogAdminPassword.name }}
  namespace: {{ .Values.global.namespace }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: {{ .Values.secret.postgres.messageLogAdminPassword.type }}
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace ".Values.secret.postgres.messageLogAdminPassword.name") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $password := (get $secretData ".Values.secret.postgres.messageLogAdminPassword.name") | default (randAlphaNum 32 | b64enc) }}
  password: {{ $password | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secret.postgres.messageLogPassword.name }}
  namespace: {{ .Values.global.namespace }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: {{ .Values.secret.postgres.messageLogPassword.type }}
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace ".Values.secret.postgres.messageLogPassword.name") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $password := (get $secretData ".Values.secret.postgres.messageLogPassword.name") | default (randAlphaNum 32 | b64enc) }}
  password: {{ $password | quote }}
{{ end }}  

