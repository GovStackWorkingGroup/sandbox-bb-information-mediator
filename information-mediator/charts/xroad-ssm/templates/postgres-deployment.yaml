{{ if .Values.global.postgres }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgresDeployment.name }}
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.postgresDeployment.spec.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.postgresDeployment.spec.selector.matchLabels.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgresDeployment.spec.temp.metadata.labels.app }}
    spec:
      containers:
        - name: {{ .Values.postgresDeployment.spec.temp.spec.containers.name }}
          image: {{ .Values.postgresDeployment.spec.temp.spec.containers.image }}
          imagePullPolicy: {{ .Values.postgresDeployment.spec.temp.spec.containers.imagePullPolicy }}
          ports: 
            - containerPort: {{ .Values.postgresDeployment.spec.temp.spec.containers.containerPort }}
          env:
            - name: PGDATA
              value: {{ .Values.global.PGDATA }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresDeployment.spec.temp.spec.containers.passwordSecretName }}
                  key: password
          volumeMounts:
            - mountPath: {{ .Values.global.PGDATA }}
              name: {{ .Values.postgresDeployment.spec.temp.spec.containers.volumeMountName }}
      volumes:
        {{- range .Values.postgresDeployment.spec.temp.spec.volumes }}
        - name: {{ .name }}
          persistentVolumeClaim:
            claimName: {{ .claimName }}
        {{- end }}    
{{ end }}                     
